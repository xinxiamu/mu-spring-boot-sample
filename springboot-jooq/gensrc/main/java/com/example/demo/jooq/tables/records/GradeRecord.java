/*
 * This file is generated by jOOQ.
*/
package com.example.demo.jooq.tables.records;


import com.example.demo.jooq.tables.Grade;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GradeRecord extends UpdatableRecordImpl<GradeRecord> implements Record2<Long, Integer> {

    private static final long serialVersionUID = -1609228444;

    /**
     * Setter for <code>testdb.grade.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>testdb.grade.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>testdb.grade.gnum</code>.
     */
    public void setGnum(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>testdb.grade.gnum</code>.
     */
    public Integer getGnum() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Grade.GRADE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Grade.GRADE.GNUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getGnum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradeRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradeRecord value2(Integer value) {
        setGnum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradeRecord values(Long value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GradeRecord
     */
    public GradeRecord() {
        super(Grade.GRADE);
    }

    /**
     * Create a detached, initialised GradeRecord
     */
    public GradeRecord(Long id, Integer gnum) {
        super(Grade.GRADE);

        set(0, id);
        set(1, gnum);
    }
}
