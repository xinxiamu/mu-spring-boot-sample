/*
 * This file is generated by jOOQ.
*/
package com.example.demo.jooq.tables;


import com.example.demo.jooq.Keys;
import com.example.demo.jooq.Testdb;
import com.example.demo.jooq.tables.records.TeacherClasszsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeacherClasszs extends TableImpl<TeacherClasszsRecord> {

    private static final long serialVersionUID = 823805130;

    /**
     * The reference instance of <code>testdb.teacher_classzs</code>
     */
    public static final TeacherClasszs TEACHER_CLASSZS = new TeacherClasszs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeacherClasszsRecord> getRecordType() {
        return TeacherClasszsRecord.class;
    }

    /**
     * The column <code>testdb.teacher_classzs.teachers_id</code>.
     */
    public final TableField<TeacherClasszsRecord, Long> TEACHERS_ID = createField("teachers_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>testdb.teacher_classzs.classzs_id</code>.
     */
    public final TableField<TeacherClasszsRecord, Long> CLASSZS_ID = createField("classzs_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>testdb.teacher_classzs</code> table reference
     */
    public TeacherClasszs() {
        this("teacher_classzs", null);
    }

    /**
     * Create an aliased <code>testdb.teacher_classzs</code> table reference
     */
    public TeacherClasszs(String alias) {
        this(alias, TEACHER_CLASSZS);
    }

    private TeacherClasszs(String alias, Table<TeacherClasszsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TeacherClasszs(String alias, Table<TeacherClasszsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Testdb.TESTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TeacherClasszsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TeacherClasszsRecord, ?>>asList(Keys.FKH2HF2ESDXMJPAUONRGQT7GYMI, Keys.FKIY6OB539N4EMV1OPOFLB20535);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherClasszs as(String alias) {
        return new TeacherClasszs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TeacherClasszs rename(String name) {
        return new TeacherClasszs(name, null);
    }
}
