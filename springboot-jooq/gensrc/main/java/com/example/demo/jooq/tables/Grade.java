/*
 * This file is generated by jOOQ.
*/
package com.example.demo.jooq.tables;


import com.example.demo.jooq.Keys;
import com.example.demo.jooq.Testdb;
import com.example.demo.jooq.tables.records.GradeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Grade extends TableImpl<GradeRecord> {

    private static final long serialVersionUID = 1930940639;

    /**
     * The reference instance of <code>testdb.grade</code>
     */
    public static final Grade GRADE = new Grade();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GradeRecord> getRecordType() {
        return GradeRecord.class;
    }

    /**
     * The column <code>testdb.grade.id</code>.
     */
    public final TableField<GradeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>testdb.grade.gnum</code>.
     */
    public final TableField<GradeRecord, Integer> GNUM = createField("gnum", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>testdb.grade</code> table reference
     */
    public Grade() {
        this("grade", null);
    }

    /**
     * Create an aliased <code>testdb.grade</code> table reference
     */
    public Grade(String alias) {
        this(alias, GRADE);
    }

    private Grade(String alias, Table<GradeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Grade(String alias, Table<GradeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Testdb.TESTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GradeRecord, Long> getIdentity() {
        return Keys.IDENTITY_GRADE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GradeRecord> getPrimaryKey() {
        return Keys.KEY_GRADE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GradeRecord>> getKeys() {
        return Arrays.<UniqueKey<GradeRecord>>asList(Keys.KEY_GRADE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Grade as(String alias) {
        return new Grade(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Grade rename(String name) {
        return new Grade(name, null);
    }
}
