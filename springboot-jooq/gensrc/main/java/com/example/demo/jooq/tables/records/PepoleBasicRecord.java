/*
 * This file is generated by jOOQ.
*/
package com.example.demo.jooq.tables.records;


import com.example.demo.jooq.tables.PepoleBasic;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PepoleBasicRecord extends UpdatableRecordImpl<PepoleBasicRecord> implements Record4<Long, Timestamp, String, String> {

    private static final long serialVersionUID = -1246069785;

    /**
     * Setter for <code>testdb.pepole_basic.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>testdb.pepole_basic.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>testdb.pepole_basic.birthday_time</code>.
     */
    public void setBirthdayTime(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>testdb.pepole_basic.birthday_time</code>.
     */
    public Timestamp getBirthdayTime() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>testdb.pepole_basic.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>testdb.pepole_basic.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>testdb.pepole_basic.sext_type</code>.
     */
    public void setSextType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>testdb.pepole_basic.sext_type</code>.
     */
    public String getSextType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Timestamp, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Timestamp, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PepoleBasic.PEPOLE_BASIC.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return PepoleBasic.PEPOLE_BASIC.BIRTHDAY_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PepoleBasic.PEPOLE_BASIC.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PepoleBasic.PEPOLE_BASIC.SEXT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getBirthdayTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSextType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PepoleBasicRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PepoleBasicRecord value2(Timestamp value) {
        setBirthdayTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PepoleBasicRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PepoleBasicRecord value4(String value) {
        setSextType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PepoleBasicRecord values(Long value1, Timestamp value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PepoleBasicRecord
     */
    public PepoleBasicRecord() {
        super(PepoleBasic.PEPOLE_BASIC);
    }

    /**
     * Create a detached, initialised PepoleBasicRecord
     */
    public PepoleBasicRecord(Long id, Timestamp birthdayTime, String name, String sextType) {
        super(PepoleBasic.PEPOLE_BASIC);

        set(0, id);
        set(1, birthdayTime);
        set(2, name);
        set(3, sextType);
    }
}
